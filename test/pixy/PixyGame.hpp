#ifndef PIXY_GAME_HPP_INCLUDED
#define PIXY_GAME_HPP_INCLUDED

#include <Frontier.hpp>
#include "PixyEngine.hpp"
#include <random>

class PixyGame
{
protected:
	GuiWindow m_win;
	vec2i m_lastHover;
	PixyEngine *m_engine;
	fm::Size m_tick;
	mutable std::mt19937 gen;
	mutable std::uniform_real_distribution<> dst;

	/////////////////////////////////////////////////////////////
	void onEvent(fw::Event &ev);

public:
	/////////////////////////////////////////////////////////////
	PixyGame(fm::String title = "game",vec2s mapSize = vec2s());

	/////////////////////////////////////////////////////////////
	void run();

	/* event handling */

	/////////////////////////////////////////////////////////////
	virtual void onHover(vec2s p,FieldData &data,bool on);

	/////////////////////////////////////////////////////////////
	virtual void onKey(fw::KeyboardEvent key);

	/////////////////////////////////////////////////////////////
	virtual void onTick(fm::Size tick);

	/* untility */

	/////////////////////////////////////////////////////////////
	bool validPoint(vec2i p) const;

	/////////////////////////////////////////////////////////////
	double random() const;

	/////////////////////////////////////////////////////////////
	vec4 getMapColor(vec2i p) const;

	/////////////////////////////////////////////////////////////
	void setMapColor(vec2i p,vec4 c);

	/////////////////////////////////////////////////////////////
	vec2s getMapSize() const;
};

#endif // PIXY_GAME_HPP_INCLUDED
